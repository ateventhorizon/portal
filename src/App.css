/* Global Styles */
:root {
  --font-size-normal: 0.8rem;
  --font-size-one: 1rem;
  --font-size-medium: 1.25rem;
  --font-size-small: 0.7rem;
  --font-size-extrasmall: 0.55rem;
  --primary-color: rgb(23, 162, 184);
  --secondary-alt-color: #e76848;
  --primary-color-dark: rgb(20, 100, 112);
  --dark-color: #343a40;
  --light-color: #f4f4f4;
  --danger-color: #dc3545;
  --happy-color: #dcd505;
  --success-color: #28a745;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Raleway", sans-serif;
  font-size: 1rem;
  background-color: #fff;
  color: #333;
  line-height: inherit;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.Canvas {
  grid-area: render;
  /* width: 522px;
  height: 522px;
  margin: 7px;
  padding: 5px; */
  border-radius: 10px;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
}

.navbareh-a {
  grid-area: navbareh;
  align-self: center;
  justify-self: start;
  font-size: 1.3rem;
}

.navbaruser-a {
  grid-area: navbaruser;
  align-self: center;
  justify-self: end;
  color: var(--light-color);
}

.navbarGrid {
  background: var(--dark-color);
  display: grid;
  grid-template-columns: 15px 260px 990px 15px;
  grid-template-rows: 42px;
  grid-template-areas: ". navbareh navbaruser .";
}

.projectInvitationGrid {
  display: grid;
  grid-template-columns: 90% 10%;
  grid-template-rows: 100%;
  grid-template-areas: "projectTitle closeButton";
}

.closeButton-a {
  grid-area: closeButton;
  justify-self: end;
}

.mainDesktopPageLayout {
  width: 1280px;
  margin: 0 auto;
}

.project-a {
  grid-area: project;
  justify-self: start;
  align-self: center;
  font-family: "Nunito", sans-serif;
  font-size: 1.8rem;
}

.yourproject {
  margin: 15px 0px;
  margin-top: 30px;
}

.project-login {
  display: inline;
}

.searchbar-a {
  grid-area: searchbar;
  justify-self: center;
  align-self: center;
}

.topentityselectorbar-a {
  grid-area: topentityselectorbar;
  justify-self: start;
  align-self: center;
}

.thumbs-a {
  grid-area: thumbs;
  justify-self: stretch;
  align-self: stretch;
}

.editor-a {
  grid-area: editor;
  justify-self: stretch;
  align-self: stretch;
}

.projetTaskbar {
  display: grid;
  grid-template-columns: 230px 1020px;
  grid-template-rows: 55px;
  grid-template-areas: "project topentityselectorbar";
  grid-gap: 5px 5px;
  align-items: center;
  justify-items: stretch;
  justify-content: center;
  background-image: linear-gradient(
    rgba(23, 162, 184, 0),
    rgba(23, 162, 184, 0.06)
  );
}

.dashboardContainer {
  display: grid;
  grid-template-columns: 230px 1020px;
  grid-template-rows: 584px;
  grid-template-areas: "thumbs editor";
  grid-gap: 5px 5px;
  align-items: center;
  justify-items: stretch;
  justify-content: center;
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.06),
    rgba(23, 162, 184, 0)
  );
}

.imagerotate {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 120px;
  height: 120px;
  margin: -60px 0 0 -60px;
  -webkit-animation: spin 4s linear infinite;
  -moz-animation: spin 4s linear infinite;
  animation: spin 4s linear infinite;
}
@-moz-keyframes spin {
  100% {
    -moz-transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
  }
}
@keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

a {
  color: var(--primary-color);
  text-decoration: none;
}

ul {
  list-style: none;
}

img {
  width: 100%;
  border-radius: 4px;
}

.EntityThumbnail {
  display: grid;
  grid-template-columns: 48px 142px;
  grid-template-rows: 32px 18px;
  grid-template-areas:
    "EntityThumbnailInset EntityThumbnailTags"
    "EntityThumbnailInset EntityThumbnailOwner";
  width: 94%;
  height: 58px;
  border-radius: 4px;
  margin: 4px 6px;
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.06),
    rgba(23, 162, 184, 0)
  );
  cursor: pointer;
  padding: 4px 5px;
  overflow: hidden;
  font-size: 0.6rem;
  text-align: center;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
}

.EntityThumbnail:hover {
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.15),
    rgba(23, 162, 184, 0)
  );
  box-shadow: 0 2px 1px 0 rgba(0, 0, 0, 0.2), 0 2px 1px 0 rgba(0, 0, 0, 0.19);
}

.EntityThumbnail:active {
  transform: scale(0.98);
  transition-duration: 0.2s;
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.35),
    rgba(23, 162, 184, 0)
  );
}

.EntityThumbnailInset {
  grid-area: EntityThumbnailInset;
  align-content: stretch;
  justify-content: stretch;
}

.EntityThumbnailText {
  grid-area: EntityThumbnailTags;
  height: 100%;
  align-self: start;
  justify-self: start;
  overflow: hidden;
  padding: 0px 8px;
  text-overflow: ellipsis;
  text-align: left;
  color: var(--primary-color);
  word-wrap: break-word;
}

.EntityThumbnailOwner {
  grid-area: EntityThumbnailOwner;
  color: var(--secondary-alt-color);
  align-content: start;
  padding: 0px 8px;
  justify-self: start;
}

/* Utilities */
.clickable {
  cursor: pointer;
  outline: none;
}

.clickable:hover {
  opacity: 0.8;
  transition: opacity 0.2s ease-in;
}

.clickable:active {
  transform: scale(0.95);
  transition-duration: 0.2s;
}

.container {
  max-width: 1920px;
  margin: auto;
  overflow: hidden;
  padding: 0 25%;
  margin-top: 4rem;
  margin-bottom: 3rem;
}

.search-bar {
  margin: 0 auto;
  height: 38px;
  width: 100%;
  padding-left: 10px;
  font-size: 1rem;
  border: 1px solid var(--primary-color);
  border-radius: 8px;
  outline: none;
}

.search-bar-smaller {
  height: 30px;
  font-size: 0.9rem;
  border-radius: 4px;
}

input#search-bar:hover {
  box-shadow: inset 0 0 1px 1px var(--primary-color);
}

.search-icon {
  position: relative;
  float: left;
  top: -31px;
  right: -723px;
}

.entitiesSearchBox {
  /* margin: auto; */
  padding: 5px;
  height: 45px;
  width: 100%;
  overflow: hidden;
  /* display: block; */
}

.topEntitySelectorBar {
  width: 100%;
  float: left;
}

.leftSideBarGroup {
  width: 10%;
  padding: 8px 0px;
  margin-right: 5px;
  float: left;
  font-family: "Roboto", sans-serif;
  font-size: 0.8rem;
  font-style: thin;
  font-weight: 100;
  color: var(--primary-color-dark);
  border-radius: 6px;
  border-bottom: solid 1px rgba(23, 162, 184, 0.15);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.03),
    rgba(23, 162, 184, 0)
  );
  cursor: pointer;
}

.leftSideBarGroupSelected {
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(236, 118, 8, 0.2),
    rgba(241, 166, 4, 0.1)
  );
  cursor: pointer;
}

.leftSideBarGroup:hover {
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.15),
    rgba(23, 162, 184, 0)
  );
}

.leftSideBarIcon {
  padding-left: 10%;
  color: var(--dark-color);
  width: 20%;
  float: left;
}

.leftSideBarText {
  padding-left: 10%;
  width: 80%;
  float: right;
}

.thumbsEntityArea {
  border-radius: 4px;
  border: 1px solid rgba(0, 0, 0, 0.2);
  overflow-y: scroll;
}

.entryEditor {
  border-radius: 4px;
  border: 1px solid rgba(0, 0, 0, 0.2);
}

.EntryEditorRender {
  grid-area: render;
  align-self: stretch;
  justify-self: stretch;
}

.EntryEditorMetadata {
  overflow: hidden;
}

.nameValue-a {
  grid-area: nameValue;
  justify-self: start;
  align-self: center;
  padding-left: 12px;
  /* padding-top: 5px; */
}

.entity-drag-a {
  grid-area: drag;
  justify-self: stretch;
  align-self: stretch;
}

.entity-tags-a {
  grid-area: entity-tags;
  justify-self: center;
  align-self: start;
  margin-top: 10px;
}

.entity-info-a {
  grid-area: entity-info;
  justify-self: stretch;
  align-self: start;
}

.nodeViewer-a {
  grid-area: nodeViewer;
  justify-self: stretch;
  align-self: start;
  padding: 5px;
  margin: 7px;
  height: 522px;
  border: 1px solid #d1d1d140;
  border-radius: 4px;
  overflow-y: auto;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
}

.titleMargin {
  margin: 8px 2px;
}

.matName-a {
  grid-area: matName;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-one);
  color: var(--secondary-alt-color);
}

.replaceMat-a {
  grid-area: replaceMat;
  justify-self: end;
  align-self: center;
  cursor: pointer;
}

.replaceMat-a:hover {
  opacity: 0.8;
  transition: opacity 0.2s ease-in;
}

.replaceMat-a:active {
  transform: scale(0.95);
  transition-duration: 0.2s;
}

.baseColorLabel-a {
  grid-area: baseColorLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
  color: var(--dark-color);
}

.baseColorPicker-a {
  grid-area: baseColorPicker;
  justify-self: end;
  align-self: center;
  cursor: pointer;
}

.baseTexture-a {
  /* grid-area: baseTexture; */
  justify-self: stretch;
  align-self: stretch;
}

.baseTextureLabel-a {
  /* grid-area: baseTextureLabel; */
  justify-self: center;
  align-self: center;
  font-size: var(--font-size-extrasmall);
  color: var(--dark-color);
}

.metallicLabel-a {
  grid-area: metallicLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
  color: var(--dark-color);
}

.metallicSlider-a {
  grid-area: metallicSlider;
  justify-self: center;
  align-self: center;
}

.roughnessLabel-a {
  grid-area: roughnessLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
  color: var(--dark-color);
}

.roughnessSlider-a {
  grid-area: roughnessSlider;
  justify-self: center;
  align-self: center;
}

.aoLabel-a {
  grid-area: aoLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
  color: var(--dark-color);
}

.aoSlider-a {
  grid-area: aoSlider;
  justify-self: center;
  align-self: center;
}

.opacityLabel-a {
  grid-area: opacityLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
  color: var(--dark-color);
}

.opacitySlider-a {
  grid-area: opacitySlider;
  justify-self: center;
  align-self: center;
}

.normalTexture-a {
  grid-area: normalTexture;
}

.normalTextureLabel-a {
  grid-area: normalTextureLabel;
}

.metallicTexture-a {
  grid-area: metallicTexture;
}

.metallicTextureLabel-a {
  grid-area: metallicTextureLabel;
}

.roughnessTexture-a {
  grid-area: roughnessTexture;
}

.roughnessTextureLabel-a {
  grid-area: roughnessTextureLabel;
}

.aoTexture-a {
  grid-area: aoTexture;
}

.aoTextureLabel-a {
  grid-area: aoTextureLabel;
}

.emissiveTexture-a {
  grid-area: emissiveTexture;
}

.emissiveTextureLabel-a {
  grid-area: emissiveTextureLabel;
}

.pbrSlider {
  width: 100%;
}

.smallObjectMaterial {
  display: grid;
  margin: 10px 0px;
  padding: 4px 8px;
  padding-top: 2px;
  grid-template-columns: repeat(6, 15.5%);
  grid-template-rows: 32px 22px repeat(4, 16px) 32px 8px;
  grid-template-areas:
    "matName matName matName matName matName replaceMat"
    "baseColorLabel baseColorLabel baseColorLabel baseColorLabel baseColorLabel baseColorPicker"
    "metallicLabel metallicLabel metallicLabel metallicSlider metallicSlider metallicSlider"
    "roughnessLabel roughnessLabel roughnessLabel roughnessSlider roughnessSlider roughnessSlider"
    "aoLabel aoLabel aoLabel aoSlider aoSlider aoSlider"
    "opacityLabel opacityLabel opacityLabel opacitySlider opacitySlider opacitySlider"
    "baseTexture normalTexture metallicTexture roughnessTexture aoTexture emissiveTexture"
    "baseTextureLabel normalTextureLabel metallicTextureLabel roughnessTextureLabel aoTextureLabel emissiveTextureLabel";
  grid-gap: 4px 3px;
  align-items: center;
  justify-items: start;
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.15),
    rgba(23, 162, 184, 0)
  );
}

.materialParams {
  display: grid;
  margin: 0;
  margin-bottom: 5px;
  padding: 8px 8px;
  grid-template-columns: repeat(6, 15.5%);
  grid-template-rows: 22px repeat(4, 16px);
  grid-template-areas:
    "baseColorLabel baseColorLabel baseColorLabel baseColorLabel baseColorLabel baseColorPicker"
    "metallicLabel metallicLabel metallicLabel metallicSlider metallicSlider metallicSlider"
    "roughnessLabel roughnessLabel roughnessLabel roughnessSlider roughnessSlider roughnessSlider"
    "aoLabel aoLabel aoLabel aoSlider aoSlider aoSlider"
    "opacityLabel opacityLabel opacityLabel opacitySlider opacitySlider opacitySlider";
  grid-gap: 4px 3px;
  align-items: center;
  justify-items: start;
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.15),
    rgba(23, 162, 184, 0)
  );
}

.smallObjectMaterial:hover {
  border: solid 1px rgba(23, 162, 184, 0.85);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.25),
    rgba(23, 162, 184, 0)
  );
}

.entity-info-c {
  border: 1px solid #d1d1d140;
  border-radius: 4px;
  cursor: text;
  margin: 10px 0px;
  padding: 5px 5px;
}

.deleteentity-a {
  grid-area: deleteentity;
  justify-self: end;
  align-self: center;
}

.metaInfiTitle {
  position: absolute;
}

.metaInfoValue {
  position: absolute;
  padding-left: 65px;
  margin-top: -0.03rem;
}

.metaInfoValueNoOff {
  position: absolute;
  padding-left: 65px;
  margin-top: 2px;
}

.GeomEditorRenderGrid {
  display: grid;
  /* margin: 10px; */
  grid-template-columns: 522px 253px 228px;
  grid-template-rows: 45px 373px 117px 45px;
  grid-template-areas:
    "nameValue nameValue drag"
    "render nodeViewer entity-tags"
    "render nodeViewer entity-info"
    "render nodeViewer deleteentity";
  grid-gap: 0px 5px;
  align-items: center;
  justify-items: start;
}

.AppEditorRenderGrid {
  display: grid;
  grid-template-columns: 522px 481px;
  grid-template-rows: 552px 20px;
  grid-template-areas:
    "source render"
    "source_controls render";
  grid-gap: 0;
  align-items: center;
  justify-items: start;
}

.confirm-alert {
  position: absolute;
  margin: auto;
  padding-top: 250px;
  padding-left: 200px;
}

.bigimagequad {
  grid-area: render;
  width: 522px;
  height: 522px;
  object-fit: contain;
  margin: 7px;
  padding: 5px;
  border-radius: 10px;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
}

.appdataquad {
  grid-area: source;
  align-self: stretch;
  justify-self: stretch;
  padding: 1px;
}

.CodeMirror {
  height: 552px;
}

.materialRender {
  float: left;
  width: 400px;
  height: 340px;
}

.material-text {
  padding-bottom: 2px;
}

.mediumPBRquad {
  padding: 2px;
  margin-bottom: 5px;
  justify-self: stretch;
  align-self: stretch;
  border-radius: 2.5px;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
  /* overflow: scroll; */
}

.materialPBRRaw {
  width: 680px;
  height: 172px;
  margin-bottom: 2px;
}

.materialPBRRaw2 {
  display: inline;
  width: 300px;
  height: 344px;
  float: left;
}

.mediumimagequad {
  object-fit: contain;
}

.geomThumbNotFound {
  font-size: 2.8rem;
}

.imageThumbNotFound {
  font-size: 3rem;
}

.leftPadded {
  padding-left: 4px;
}

.rightFloat {
  display: block;
  float: right;
}

.rightFloatPadded {
  display: block;
  float: right;
  padding-right: 4px;
}

/* Text Styles*/
.x-large {
  font-size: 4rem;
  margin-bottom: 1rem;
}

.large {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.lead {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.medium {
  font-size: 1.25rem;
}

.small {
  font-size: 0.7rem;
}

.extra-small {
  font-size: 0.55rem;
}

.normal {
  font-size: 0.8rem;
}

.text-center {
  text-align: center;
}

.text-primary {
  color: var(--primary-color);
}

.text-secondary-alt {
  color: var(--secondary-alt-color);
}

.text-dark {
  color: var(--dark-color);
}

.text-pale {
  color: #7f7f7f;
}

.text-danger {
  color: var(--danger-color);
}

/* Padding */
.p {
  padding: 0.5rem;
}
.p-1 {
  padding: 1rem;
}
.p-2 {
  padding: 2rem;
}
.p-3 {
  padding: 3rem;
}
.py {
  padding: 0.5rem 0;
}
.py-1 {
  padding: 1rem 0;
}
.py-2 {
  padding: 2rem 0;
}
.py-3 {
  padding: 3rem 0;
}

/* Margin */
.m {
  margin: 0.5rem;
}
.m-1 {
  margin: 1rem;
}
.m-2 {
  margin: 2rem;
}
.m-3 {
  margin: 3rem;
}
.my {
  margin: 0.5rem 0;
}
.my-1 {
  margin: 1rem 0;
}
.my-2 {
  margin: 2rem 0;
}
.my-3 {
  margin: 3rem 0;
}
.mx {
  margin: 0 0.5rem;
}
.mx-1 {
  margin: 0 1rem;
}
.mx-2 {
  margin: 0 2rem;
}
.mx-3 {
  margin: 0 3rem;
}

.rightFloater {
  float: right;
}

.inliner {
  display: inline;
}

.blocker {
  display: block;
}

.leftFloater {
  float: left;
}

.fullWidth {
  width: 100%;
  display: block;
}

/* .btn {
  display: inline-block;
  background: var(--light-color);
  color: #333;
  padding: 0.4rem 1.3rem;
  font-size: 1rem;
  border: none;
  cursor: pointer;
  margin-right: 0.5rem;
  transition: opacity 0.2s ease-in;
  outline: none;
  border-radius: 3px;
} */

.btn2 {
  width: 100%;
  background: var(--light-color);
  color: #333;
  padding: 0.4rem 1.3rem;
  font-size: 1rem;
  border: none;
  cursor: pointer;
  transition: opacity 0.2s ease-in;
  outline: none;
}

.btnConfirm {
  width: 50%;
  background: var(--light-color);
  color: #333;
  padding: 0.2rem 1.1rem;
  font-size: 1.2rem;
  border: none;
  cursor: pointer;
  transition: opacity 0.2s ease-in;
  outline: none;
}

.btn:active {
  transform: scale(0.95);
  transition-duration: 0.2s;
}

.btn2:active {
  transform: scale(0.95);
  transition-duration: 0.2s;
}

.btnConfirm:active {
  transform: scale(0.98);
  transition-duration: 0.2s;
}

.closeButton {
  display: block;
  width: 100%;
  float: right;
  padding: 6px 6px 4px 8px;
}

.badge {
  font-size: 0.8rem;
  padding: 0.1rem;
  text-align: center;
  margin: 0.3rem;
  background: var(--light-color);
  color: #333;
}

.alert {
  padding: 0.8rem;
  margin: 1rem 0;
  opacity: 0.9;
  background: var(--light-color);
  color: #333;
}

.fullline {
  float: left;
  margin-left: 10px;
  width: 100%;
  overflow: hidden;
}

.navdiv {
  display: table;
  width: 100%;
  overflow: hidden;
  padding: 4px 0px;
}

.navdiv-title {
  font-family: "Raleway", sans-serif;
  width: 35%;
  display: table-cell;
  vertical-align: middle;
}

.navdiv-titletext {
  color: var(--light-color);
}

.navdiv-projecttext {
  color: var(--secondary-alt-color);
}

.user-navbar {
  width: 35%;
  display: table-cell;
  vertical-align: middle;
  text-align: right;
}

/* .btn-primary,
.bg-primary,
.badge-primary,
.alert-primary {
  background: var(--primary-color);
  color: #fff;
} */

.btn-light,
.bg-light,
.badge-light,
.alert-light {
  background: var(--light-color);
  color: #333;
}

.btn-dark,
.bg-dark,
.badge-dark,
.alert-dark {
  background: var(--dark-color);
  color: #fff;
}

.btn-danger,
.bg-danger,
.badge-danger,
.alert-danger {
  background: var(--danger-color);
  color: #fff;
}

.btn-success,
.bg-success,
.badge-success,
.alert-success {
  background: var(--success-color);
  color: #fff;
}

.btn-white,
.bg-white,
.badge-white,
.alert-white {
  background: #fff;
  color: #333;
  border: #ccc solid 1px;
}

.btn:hover {
  opacity: 0.8;
}

.bg-light,
.badge-light {
  border: #ccc solid 1px;
}

.round-img {
  border-radius: 50%;
}

.line {
  height: 1px;
  background: #ccc;
  margin: 1.5rem 0;
}

/* Overlay */
.dark-overlay {
  background-color: rgba(0, 0, 0, 0.7);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Forms */
.form .form-group {
  margin: 1.2rem 0;
}

.form .form-text {
  display: block;
  margin-top: 0.3rem;
  color: #888;
}

.form input[type="text"],
.form input[type="email"],
.form input[type="password"],
.form input[type="date"],
.form select,
.form textarea {
  display: block;
  width: 90%;
  max-width: 600px;
  padding: 0.4rem;
  font-size: 1.2rem;
  border: 1px solid #ccc;
}

.form input[type="submit"],
button {
  font: inherit;
}

.form .social-input {
  display: flex;
}

.form .social-input i {
  padding: 0.5rem;
  width: 4rem;
}

.form .social-input i.fa-twitter {
  color: #38a1f3;
}
.form .social-input i.fa-facebook {
  color: #3b5998;
}
.form .social-input i.fa-instagram {
  color: #3f729b;
}
.form .social-input i.fa-youtube {
  color: #c4302b;
}
.form .social-input i.fa-linkedin {
  color: #0077b5;
}

input[type="color"] {
  -webkit-appearance: none;
  width: 20px;
  height: 20px;
  border: solid 1px #000; /*change color of the swatch border here*/
  border-radius: 2px;
  background: none;
}
input[type="color"]::-webkit-color-swatch-wrapper {
  padding: 0;
}
input[type="color"]::-webkit-color-swatch {
  border: solid 1px #000; /*change color of the swatch border here*/
  border-radius: 2px;
}

input[type="color"]:hover {
  border: solid 2px var(--primary-color); /*change color of the swatch border here*/
}

input[type="color"]:active {
  transform: scale(0.95);
}

.table th,
.table td {
  padding: 1rem;
  text-align: left;
}

.table th {
  background: var(--light-color);
}

/* Navbar */
.navbar {
  /* display: block; */
  justify-content: space-between;
  align-items: center;
  background-color: #222;
}

.navbar ul {
  display: flex;
}

.navbar a {
  color: #fff;
  padding: 0.45rem;
  margin: 0 0.25rem;
}

.navbar a:hover {
  color: var(--primary-color);
}

.navbar .welcome span {
  margin-right: 0.6rem;
}

/* Landing Page */
.landing {
  position: relative;
  background: url("./img/bg.jpg") no-repeat center center/cover;
  height: 100vh;
}

.landing-inner {
  color: #fff;
  height: 100%;
  width: 80%;
  margin: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.projectManagementContainer {
  width: 50%;
  margin-top: 20px;
  padding: 10px;
  border: 1px solid grey;
  border-radius: 5px;
}

/* Tooltip container */
.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
}

/* Tooltip text */
.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  bottom: 100%;
  left: 50%;
  margin-left: -60px; /* Use half of the width (120/2 = 60), to center the tooltip */
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;

  /* Position the tooltip text - see examples below! */
  position: absolute;
  z-index: 1;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
}

.userWithNoProject {
  margin: 2% 1.5%;
}

.dropzone {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 7px;
  border-width: 2px;
  border-radius: 2px;
  border-color: #eeeeee;
  border-style: dashed;
  background-color: #fafafa;
  margin: 5px;
  margin-bottom: 7px;
  color: #bdbdbd;
  outline: none;
  transition: border 0.24s ease-in-out;
  cursor: pointer;
}

.dropzoneNoHMargins {
  margin: 5px 0px;
  cursor: pointer;
}

.react-tags {
  position: relative;
  padding: 6px 0 0 6px;
  border: 1px solid #d1d1d140;
  border-radius: 4px;
  margin-top: 10px;

  /* shared font styles */
  color: var(--primary-color);
  font-size: 1em;
  line-height: 1.2;

  /* clicking anywhere will focus the input */
  cursor: text;
}

.react-tags.is-focused {
  border-color: #b1b1b140;
}

.react-tags__selected {
  display: inline;
}

.react-tags__selected-tag {
  display: inline-block;
  box-sizing: border-box;
  margin: 0 6px 6px 0;
  padding: 6px 8px;
  border: 1px solid #d1d1d1;
  border-radius: 2px;
  background: #f1f1f1;
  color: var(--primary-color);

  /* match the font styles */
  font-size: inherit;
  line-height: inherit;
}

.react-tags__selected-tag:after {
  content: "\2715";
  color: #aaa;
  margin-left: 8px;
}

.react-tags__selected-tag:hover,
.react-tags__selected-tag:focus {
  border-color: #b1b1b1;
}

.react-tags__search {
  display: inline-block;

  /* match tag layout */
  padding: 7px 2px;
  margin-bottom: 6px;

  /* prevent autoresize overflowing the container */
  max-width: 100%;
}

@media screen and (min-width: 30em) {
  .react-tags__search {
    /* this will become the offsetParent for suggestions */
    position: relative;
  }
}

.react-tags__search input {
  /* prevent autoresize overflowing the container */
  max-width: 100%;
  min-width: 200px;
  /* remove styles and layout from this element */
  margin: 0;
  padding: 0;
  border: 0;
  outline: none;

  /* match the font styles */
  font-size: inherit;
  line-height: inherit;
}

.react-tags__search input::-ms-clear {
  display: none;
}

.react-tags__suggestions {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
}

@media screen and (min-width: 30em) {
  .react-tags__suggestions {
    width: 240px;
  }
}

.react-tags__suggestions ul {
  margin: 4px -1px;
  padding: 0;
  list-style: none;
  background: white;
  border: 1px solid #d1d1d1;
  border-radius: 2px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.react-tags__suggestions li {
  border-bottom: 1px solid #ddd;
  padding: 6px 8px;
}

.react-tags__suggestions li mark {
  text-decoration: underline;
  background: none;
  font-weight: 600;
}

.react-tags__suggestions li:hover {
  cursor: pointer;
  background: #eee;
}

.react-tags__suggestions li.is-active {
  background: #b7cfe0;
}

.react-tags__suggestions li.is-disabled {
  opacity: 0.5;
  cursor: auto;
}

.loader {
  color: rgb(21, 156, 156);
  position: fixed;
  box-sizing: border-box;
  left: -9999px;
  top: -9999px;
  width: 0;
  height: 0;
  overflow: hidden;
  z-index: 999999;
}
.loader:after,
.loader:before {
  box-sizing: border-box;
  display: none;
}
.loader.is-active {
  /* background-color: rgba(0, 0, 0, 0.12); */
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
}
.loader.is-active:after,
.loader.is-active:before {
  display: block;
}
@keyframes rotation {
  0% {
    transform: rotate(0);
  }
  to {
    transform: rotate(359deg);
  }
}
@keyframes blink {
  0% {
    opacity: 0.5;
  }
  to {
    opacity: 1;
  }
}
.loader[data-text]:before {
  position: fixed;
  left: 0;
  top: 50%;
  color: currentColor;
  font-family: Helvetica, Arial, sans-serif;
  text-align: center;
  width: 100%;
  font-size: 14px;
}
.loader[data-text=""]:before {
  content: "Loading";
}
.loader[data-text]:not([data-text=""]):before {
  content: attr(data-text);
}
.loader[data-text][data-blink]:before {
  animation: blink 1s linear infinite alternate;
}
.loader-default[data-text]:before {
  top: calc(50% - 63px);
}
.loader-default:after {
  content: "";
  position: fixed;
  width: 48px;
  height: 48px;
  border: 8px solid rgb(21, 156, 156);
  border-left-color: transparent;
  border-radius: 50%;
  top: calc(50% - 24px);
  left: calc(50% - 24px);
  animation: rotation 1s linear infinite;
}
.loader-default[data-half]:after {
  border-right-color: transparent;
}
.loader-default[data-inverse]:after {
  animation-direction: reverse;
}
.loader-double:after,
.loader-double:before {
  content: "";
  position: fixed;
  border-radius: 50%;
  border: 8px solid;
  animation: rotation 1s linear infinite;
}
.loader-double:after {
  width: 48px;
  height: 48px;
  border-color: rgb(21, 156, 156);
  border-left-color: transparent;
  top: calc(50% - 24px);
  left: calc(50% - 24px);
}
.loader-double:before {
  width: 64px;
  height: 64px;
  border-color: #eb974e;
  border-right-color: transparent;
  animation-duration: 2s;
  top: calc(50% - 32px);
  left: calc(50% - 32px);
}
.loader-bar[data-text]:before {
  top: calc(50% - 40px);
  color: rgb(21, 156, 156);
}
.loader-bar:after {
  content: "";
  position: fixed;
  top: 50%;
  left: 50%;
  width: 200px;
  height: 20px;
  transform: translate(-50%, -50%);
  background: linear-gradient(
    -45deg,
    #4183d7 25%,
    #52b3d9 0,
    #52b3d9 50%,
    #4183d7 0,
    #4183d7 75%,
    #52b3d9 0,
    #52b3d9
  );
  background-size: 20px 20px;
  box-shadow: inset 0 10px 0 hsla(0, 0%, 100%, 0.2),
    0 0 0 5px rgba(0, 0, 0, 0.2);
  animation: moveBar 1.5s linear infinite reverse;
}
.loader-bar[data-rounded]:after {
  border-radius: 15px;
}
.loader-bar[data-inverse]:after {
  animation-direction: normal;
}
@keyframes moveBar {
  0% {
    background-position: 0 0;
  }
  to {
    background-position: 20px 20px;
  }
}
.loader-bar-ping-pong:before {
  width: 200px;
  background-color: #000;
}
.loader-bar-ping-pong:after,
.loader-bar-ping-pong:before {
  content: "";
  height: 20px;
  position: absolute;
  top: calc(50% - 10px);
  left: calc(50% - 100px);
}
.loader-bar-ping-pong:after {
  width: 50px;
  background-color: #f19;
  animation: moveBarPingPong 0.5s linear infinite alternate;
}
.loader-bar-ping-pong[data-rounded]:before {
  border-radius: 10px;
}
.loader-bar-ping-pong[data-rounded]:after {
  border-radius: 50%;
  width: 20px;
  animation-name: moveBarPingPongRounded;
}
@keyframes moveBarPingPong {
  0% {
    left: calc(50% - 100px);
  }
  to {
    left: calc(50% - -50px);
  }
}
@keyframes moveBarPingPongRounded {
  0% {
    left: calc(50% - 100px);
  }
  to {
    left: calc(50% - -80px);
  }
}
@keyframes corners {
  6% {
    width: 60px;
    height: 15px;
  }
  25% {
    width: 15px;
    height: 15px;
    left: calc(100% - 15px);
    top: 0;
  }
  31% {
    height: 60px;
  }
  50% {
    height: 15px;
    top: calc(100% - 15px);
    left: calc(100% - 15px);
  }
  56% {
    width: 60px;
  }
  75% {
    width: 15px;
    left: 0;
    top: calc(100% - 15px);
  }
  81% {
    height: 60px;
  }
}
.loader-border[data-text]:before {
  color: rgb(21, 156, 156);
}
.loader-border:after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 15px;
  height: 15px;
  background-color: #ff0;
  animation: corners 3s ease both infinite;
}
.loader-ball:before {
  content: "";
  position: absolute;
  width: 50px;
  height: 50px;
  top: 50%;
  left: 50%;
  margin: -25px 0 0 -25px;
  background-color: rgb(21, 156, 156);
  border-radius: 50%;
  z-index: 1;
  animation: kickBall 1s infinite alternate ease-in both;
}
.loader-ball[data-shadow]:before {
  box-shadow: inset -5px -5px 10px 0 rgba(0, 0, 0, 0.5);
}
.loader-ball:after {
  content: "";
  position: absolute;
  background-color: rgba(0, 0, 0, 0.3);
  border-radius: 50%;
  width: 45px;
  height: 20px;
  top: calc(50% + 10px);
  left: 50%;
  margin: 0 0 0 -22.5px;
  z-index: 0;
  animation: shadow 1s infinite alternate ease-out both;
}
@keyframes shadow {
  0% {
    background-color: transparent;
    transform: scale(0);
  }
  40% {
    background-color: transparent;
    transform: scale(0);
  }
  95% {
    background-color: rgba(0, 0, 0, 0.75);
    transform: scale(1);
  }
  to {
    background-color: rgba(0, 0, 0, 0.75);
    transform: scale(1);
  }
}
@keyframes kickBall {
  0% {
    transform: translateY(-80px) scaleX(0.95);
  }
  90% {
    border-radius: 50%;
  }
  to {
    transform: translateY(0) scaleX(1);
    border-radius: 50% 50% 20% 20%;
  }
}
.loader-smartphone:after {
  content: "";
  color: rgb(21, 156, 156);
  font-size: 12px;
  font-family: Helvetica, Arial, sans-serif;
  text-align: center;
  line-height: 120px;
  position: fixed;
  left: 50%;
  top: 50%;
  width: 70px;
  height: 130px;
  margin: -65px 0 0 -35px;
  border: 5px solid #fd0;
  border-radius: 10px;
  box-shadow: inset 0 5px 0 0 #fd0;
  background: radial-gradient(
      circle at 50% 90%,
      rgba(0, 0, 0, 0.5) 6px,
      transparent 0
    ),
    linear-gradient(0deg, #fd0 22px, transparent 0),
    linear-gradient(0deg, rgba(0, 0, 0, 0.5) 22px, rgba(0, 0, 0, 0.5));
  animation: shake 2s cubic-bezier(0.36, 0.07, 0.19, 0.97) both infinite;
}
.loader-smartphone[data-screen=""]:after {
  content: "Loading";
}
.loader-smartphone:not([data-screen=""]):after {
  content: attr(data-screen);
}
@keyframes shake {
  5% {
    transform: translate3d(-1px, 0, 0);
  }
  10% {
    transform: translate3d(1px, 0, 0);
  }
  15% {
    transform: translate3d(-1px, 0, 0);
  }
  20% {
    transform: translate3d(1px, 0, 0);
  }
  25% {
    transform: translate3d(-1px, 0, 0);
  }
  30% {
    transform: translate3d(1px, 0, 0);
  }
  35% {
    transform: translate3d(-1px, 0, 0);
  }
  40% {
    transform: translate3d(1px, 0, 0);
  }
  45% {
    transform: translate3d(-1px, 0, 0);
  }
  50% {
    transform: translate3d(1px, 0, 0);
  }
  55% {
    transform: translate3d(-1px, 0, 0);
  }
}
.loader-clock:before {
  width: 120px;
  height: 120px;
  border-radius: 50%;
  margin: -60px 0 0 -60px;
  background: linear-gradient(180deg, transparent 50%, #f5f5f5 0),
    linear-gradient(
      90deg,
      transparent 55px,
      #2ecc71 0,
      #2ecc71 65px,
      transparent 0
    ),
    linear-gradient(180deg, #f5f5f5 50%, #f5f5f5 0);
  box-shadow: inset 0 0 0 10px #f5f5f5, 0 0 0 5px #555, 0 0 0 10px #7b7b7b;
  animation: rotation infinite 2s linear;
}
.loader-clock:after,
.loader-clock:before {
  content: "";
  position: fixed;
  left: 50%;
  top: 50%;
  overflow: hidden;
}
.loader-clock:after {
  width: 60px;
  height: 40px;
  margin: -20px 0 0 -15px;
  border-radius: 20px 0 0 20px;
  background: radial-gradient(circle at 14px 20px, #25a25a 10px, transparent 0),
    radial-gradient(circle at 14px 20px, #1b7943 14px, transparent 0),
    linear-gradient(
      180deg,
      transparent 15px,
      #2ecc71 0,
      #2ecc71 25px,
      transparent 0
    );
  animation: rotation infinite 24s linear;
  transform-origin: 15px center;
}
.loader-curtain:after,
.loader-curtain:before {
  position: fixed;
  width: 100%;
  top: 50%;
  margin-top: -35px;
  font-size: 70px;
  text-align: center;
  font-family: Helvetica, Arial, sans-serif;
  overflow: hidden;
  line-height: 1.2;
  content: "Loading";
}
.loader-curtain:before {
  color: #666;
}
.loader-curtain:after {
  color: rgb(21, 156, 156);
  height: 0;
  animation: curtain 1s linear infinite alternate both;
}
.loader-curtain[data-curtain-text]:not([data-curtain-text=""]):after,
.loader-curtain[data-curtain-text]:not([data-curtain-text=""]):before {
  content: attr(data-curtain-text);
}
.loader-curtain[data-brazilian]:before {
  color: #f1c40f;
}
.loader-curtain[data-brazilian]:after {
  color: #2ecc71;
}
.loader-curtain[data-colorful]:before {
  animation: maskColorful 2s linear infinite alternate both;
}
.loader-curtain[data-colorful]:after {
  animation: curtain 1s linear infinite alternate both,
    maskColorful-front 2s 1s linear infinite alternate both;
  color: #000;
}
@keyframes maskColorful {
  0% {
    color: #3498db;
  }
  49.5% {
    color: #3498db;
  }
  50.5% {
    color: #e74c3c;
  }
  to {
    color: #e74c3c;
  }
}
@keyframes maskColorful-front {
  0% {
    color: #2ecc71;
  }
  49.5% {
    color: #2ecc71;
  }
  50.5% {
    color: #f1c40f;
  }
  to {
    color: #f1c40f;
  }
}
@keyframes curtain {
  0% {
    height: 0;
  }
  to {
    height: 84px;
  }
}
.loader-music:after,
.loader-music:before {
  content: "";
  position: fixed;
  width: 240px;
  height: 240px;
  top: 50%;
  left: 50%;
  margin: -120px 0 0 -120px;
  border-radius: 50%;
  text-align: center;
  line-height: 240px;
  color: rgb(21, 156, 156);
  font-size: 40px;
  font-family: Helvetica, Arial, sans-serif;
  text-shadow: 1px 1px 0 rgba(0, 0, 0, 0.5);
  letter-spacing: -1px;
}
.loader-music:after {
  backface-visibility: hidden;
}
.loader-music[data-hey-oh]:after,
.loader-music[data-hey-oh]:before {
  box-shadow: 0 0 0 10px;
}
.loader-music[data-hey-oh]:before {
  background-color: rgb(21, 156, 156);
  color: #000;
  animation: coinBack 2.5s linear infinite, oh 5s 1.25s linear infinite both;
}
.loader-music[data-hey-oh]:after {
  background-color: #000;
  animation: coin 2.5s linear infinite, hey 5s linear infinite both;
}
.loader-music[data-no-cry]:after,
.loader-music[data-no-cry]:before {
  background: linear-gradient(45deg, #009b3a 50%, #fed100 51%);
  box-shadow: 0 0 0 10px #000;
}
.loader-music[data-no-cry]:before {
  animation: coinBack 2.5s linear infinite, cry 5s 1.25s linear infinite both;
}
.loader-music[data-no-cry]:after {
  animation: coin 2.5s linear infinite, no 5s linear infinite both;
}
.loader-music[data-we-are]:before {
  animation: coinBack 2.5s linear infinite,
    theWorld 5s 1.25s linear infinite both;
  background: radial-gradient(ellipse at center, #4ecdc4 0, #556270);
}
.loader-music[data-we-are]:after {
  animation: coin 2.5s linear infinite, weAre 5s linear infinite both;
  background: radial-gradient(ellipse at center, #26d0ce 0, #1a2980);
}
.loader-music[data-rock-you]:before {
  animation: coinBack 2.5s linear infinite,
    rockYou 5s 1.25s linear infinite both;
  background: #444;
}
.loader-music[data-rock-you]:after {
  animation: coin 2.5s linear infinite, weWill 5s linear infinite both;
  background: #96281b;
}
@keyframes coin {
  to {
    transform: rotateY(359deg);
  }
}
@keyframes coinBack {
  0% {
    transform: rotateY(180deg);
  }
  50% {
    transform: rotateY(1turn);
  }
  to {
    transform: rotateY(180deg);
  }
}
@keyframes hey {
  0% {
    content: "Hey!";
  }
  50% {
    content: "Let's!";
  }
  to {
    content: "Hey!";
  }
}
@keyframes oh {
  0% {
    content: "Oh!";
  }
  50% {
    content: "Go!";
  }
  to {
    content: "Oh!";
  }
}
@keyframes no {
  0% {
    content: "No...";
  }
  50% {
    content: "no";
  }
  to {
    content: "No...";
  }
}
@keyframes cry {
  0% {
    content: "woman";
  }
  50% {
    content: "cry!";
  }
  to {
    content: "woman";
  }
}
@keyframes weAre {
  0% {
    content: "We are";
  }
  50% {
    content: "we are";
  }
  to {
    content: "We are";
  }
}
@keyframes theWorld {
  0% {
    content: "the world,";
  }
  50% {
    content: "the children!";
  }
  to {
    content: "the world,";
  }
}
@keyframes weWill {
  0% {
    content: "We will,";
  }
  50% {
    content: "rock you!";
  }
  to {
    content: "We will,";
  }
}
@keyframes rockYou {
  0% {
    content: "we will";
  }
  50% {
    content: "\1F918";
  }
  to {
    content: "we will";
  }
}
.loader-pokeball:before {
  content: "";
  position: absolute;
  width: 100px;
  height: 100px;
  top: 50%;
  left: 50%;
  margin: -50px 0 0 -50px;
  background: linear-gradient(
    180deg,
    red 42%,
    #000 0,
    #000 58%,
    rgb(21, 156, 156) 0
  );
  background-repeat: no-repeat;
  background-color: rgb(21, 156, 156);
  border-radius: 50%;
  z-index: 1;
  animation: movePokeball 1s linear infinite both;
}
.loader-pokeball:after {
  content: "";
  position: absolute;
  width: 24px;
  height: 24px;
  top: 50%;
  left: 50%;
  margin: -12px 0 0 -12px;
  background-color: rgb(21, 156, 156);
  border-radius: 50%;
  z-index: 2;
  animation: movePokeball 1s linear infinite both,
    flashPokeball 0.5s infinite alternate;
  border: 2px solid #000;
  box-shadow: 0 0 0 5px rgb(21, 156, 156), 0 0 0 10px #000;
}
@keyframes movePokeball {
  0% {
    transform: translateX(0) rotate(0);
  }
  15% {
    transform: translatex(-10px) rotate(-5deg);
  }
  30% {
    transform: translateX(10px) rotate(5deg);
  }
  45% {
    transform: translatex(0) rotate(0);
  }
}
@keyframes flashPokeball {
  0% {
    background-color: rgb(21, 156, 156);
  }
  to {
    background-color: #fd0;
  }
}
.loader-bouncing:after,
.loader-bouncing:before {
  content: "";
  width: 20px;
  height: 20px;
  position: absolute;
  top: calc(50% - 10px);
  left: calc(50% - 10px);
  border-radius: 50%;
  background-color: rgb(21, 156, 156);
  animation: kick 0.6s infinite alternate;
}
.loader-bouncing:after {
  margin-left: -30px;
  animation: kick 0.6s infinite alternate;
}
.loader-bouncing:before {
  animation-delay: 0.2s;
}
@keyframes kick {
  0% {
    opacity: 1;
    transform: translateY(0);
  }
  to {
    opacity: 0.3;
    transform: translateY(-1rem);
  }
}

.absolute-spinner {
  position: "absolute";
  margin: auto;
}
