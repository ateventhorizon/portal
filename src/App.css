/* Global Styles */
:root {
  --font-size-normal: 0.8rem;
  --font-size-one: 1rem;
  --font-size-medium: 1.25rem;
  --font-size-small: 0.7rem;
  --font-size-extrasmall: 0.55rem;
  --primary-color: rgb(23, 162, 184);
  --secondary-alt-color: #e76848;
  --primary-color-dark: rgb(20, 100, 112);
  --primary-color-light: rgb(23, 162, 244);
  --dark-color: #343a40;
  --light-color: #f4f4f4;
  --danger-color: #dc3545;
  --happy-color: #dcd505;
  --success-color: #28a745;
  --logo-color-1: #fccb7b;
  --logo-color-2: #8ae9e9;
  --background-color: #343a40;
  --middle-grey-color: #7f7f7f;
  position: relative;
}

* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

body {
  font-family: "Raleway", sans-serif;
  font-size: 1rem;
  background-color: #343a40;
  color: #e0e0e0;
  line-height: inherit;
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  overflow: -moz-scrollbars-none;
  -ms-overflow-style: none;
}

::-webkit-scrollbar {
  width: 0 !important;
}

.Canvas {
  grid-area: render;
  /* width: 522px;
  height: 522px;
  margin: 7px;
  padding: 5px; */
  /* border-radius: 10px; */
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
}

#WasmCanvasContainer {
  padding: 0;
  margin: 0;
  position: relative;
}

#WasmCanvas {
  position: absolute;
  background-color: yellow;
  z-index: 50000;
}

.navbarlogo-a {
  grid-area: navbarlogo;
  align-self: center;
  justify-self: start;
  font-size: 1.3rem;
  color: white;
}

.navbareh-a {
  grid-area: navbareh;
  align-self: center;
  justify-self: start;
  font-family: "Righteous", cursive;
  font-size: 1.3rem;
  padding-left: 1.5%;
}

.navbaruser-a {
  grid-area: navbaruser;
  align-self: center;
  justify-self: end;
  color: var(--light-color);
}

.navbartitle-a {
  grid-area: navbartitle;
  align-self: center;
  justify-self: center;
  font-family: "Nunito", sans-serif;
  font-size: 1.3rem;
  color: var(--secondary-alt-color);
}

.navbarGrid {
  background: var(--dark-color);
  display: grid;
  grid-template-columns: 2% 23% 50% 25%;
  grid-template-rows: 42px;
  grid-template-areas: "navbarlogo navbareh navbartitle navbaruser";
  padding: 0.25% 1%;
}

.projectInvitationGrid {
  display: grid;
  grid-template-columns: 90% 10%;
  grid-template-rows: 100%;
  grid-template-areas: "projectTitle closeButton";
}

.closeButton-a {
  grid-area: closeButton;
  justify-self: end;
}

.mainDesktopPageLayout {
  width: 1280px;
  margin: 0 auto;
  /* border: 1px solid rgba(0, 0, 0, 0.2); */
}

.project-a {
  grid-area: project;
  justify-self: start;
  align-self: center;
  font-family: "Nunito", sans-serif;
  font-size: 1.8rem;
}

.yourproject {
  margin: 15px 0px;
  margin-top: 30px;
}

.project-login {
  display: inline;
}

.searchbar-a {
  grid-area: searchbar;
  justify-self: center;
  align-self: center;
}

.topentityselectorbar-a {
  grid-area: topentityselectorbar;
  justify-self: start;
  align-self: center;
}

.thumbs-a {
  grid-area: thumbs;
  justify-self: stretch;
  align-self: stretch;
}

.editor-a {
  grid-area: editor;
  justify-self: stretch;
  align-self: stretch;
}

.dashboardContainer {
  display: grid;
  grid-template-columns: 230px 1020px;
  grid-template-rows: 584px;
  grid-template-areas: "thumbs editor";
  grid-gap: 0.5% 0.5%;
  align-items: center;
  justify-items: stretch;
  justify-content: center;
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.06),
    rgba(23, 162, 184, 0)
  );
  padding: 1% 1%;
}

.imagerotate {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 120px;
  height: 120px;
  margin: -60px 0 0 -60px;
  -webkit-animation: spin 4s linear infinite;
  -moz-animation: spin 4s linear infinite;
  animation: spin 4s linear infinite;
}
@-moz-keyframes spin {
  100% {
    -moz-transform: rotate(360deg);
  }
}
@-webkit-keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
  }
}
@keyframes spin {
  100% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg);
  }
}

a {
  color: var(--primary-color);
  text-decoration: none;
}

ul {
  list-style: none;
}

img {
  width: 100%;
  height: 100%;
  border-radius: 4px;
}

.imgGreyOutline {
  border: 1px solid var(--middle-grey-color);
}

.colorLogo1 {
  color: var(--logo-color-1);
}

.colorLogo2 {
  color: var(--logo-color-2);
}

.EntityThumbnail {
  display: grid;
  grid-template-columns: 48px 142px;
  grid-template-rows: 32px 18px;
  grid-template-areas:
    "EntityThumbnailInset EntityThumbnailTags"
    "EntityThumbnailInset EntityThumbnailOwner";
  width: 100%;
  height: 58px;
  border-radius: 4px;
  margin: 1.5% 0px;
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.06),
    rgba(23, 162, 184, 0)
  );
  cursor: pointer;
  padding: 3px 4px;
  overflow: hidden;
  font-size: 0.6rem;
  text-align: center;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
  border: solid 2px rgba(23, 162, 184, 0.15);
}

.EntityThumbnail:hover {
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.15),
    rgba(23, 162, 184, 0)
  );
  box-shadow: 0 2px 1px 0 rgba(0, 0, 0, 0.2), 0 2px 1px 0 rgba(0, 0, 0, 0.19);
}

.EntityThumbnail:active {
  transform: scale(0.98);
  transition-duration: 0.2s;
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.35),
    rgba(23, 162, 184, 0)
  );
}

.EntityThumbnailInset {
  grid-area: EntityThumbnailInset;
  align-content: stretch;
  justify-content: stretch;
}

.EntityThumbnailText {
  grid-area: EntityThumbnailTags;
  height: 100%;
  align-self: start;
  justify-self: start;
  overflow: hidden;
  padding: 0px 8px;
  text-overflow: ellipsis;
  text-align: left;
  color: var(--primary-color);
  word-wrap: break-word;
}

.EntityThumbnailOwner {
  grid-area: EntityThumbnailOwner;
  color: var(--secondary-alt-color);
  align-content: start;
  padding: 0px 8px;
  justify-self: start;
}

/* Utilities */
.clickable {
  cursor: pointer;
  outline: none;
}

.clickable:hover {
  opacity: 0.8;
  transition: opacity 0.2s ease-in;
}

.clickable:active {
  transform: scale(0.95);
  transition-duration: 0.2s;
}

.container {
  max-width: 1920px;
  margin: auto;
  overflow: hidden;
  padding: 0 25%;
}

.search-bar {
  margin: 0 auto;
  height: 38px;
  width: 100%;
  padding-left: 10px;
  font-size: 1rem;
  border: 1px solid var(--primary-color);
  border-radius: 8px;
  outline: none;
  color: var(--light-color);
  background-color: var(--background-color);
}

.search-bar-smaller {
  height: 30px;
  font-size: 0.9rem;
  border-radius: 4px;
}

input#search-bar:hover {
  box-shadow: inset 0 0 1px 1px var(--primary-color);
}

.search-icon {
  position: relative;
  float: left;
  top: -31px;
  right: -723px;
}

.entitiesSearchBox {
  height: 45px;
  width: 100%;
  overflow: hidden;
  /* display: block; */
}

.topEntitySelectorBar {
  width: 100%;
  float: left;
}

.leftSideBarGroup {
  width: 75%;
  padding: 8px 0px;
  margin-bottom: 1.5%;
  float: left;
  font-family: "Roboto", sans-serif;
  font-size: 0.8rem;
  font-style: thin;
  font-weight: 100;
  /* color: var(--primary-color-dark); */
  border-radius: 6px;
  /* border-bottom: solid 1px rgba(23, 162, 184, 0.15);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.03),
    rgba(23, 162, 184, 0)
  ); */
  cursor: pointer;
}

.leftSideBarGroupSelected {
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(50, 118, 248, 0.2),
    rgba(41, 166, 244, 0.1)
  );
  cursor: pointer;
}

.leftSideBarGroup:hover {
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.15),
    rgba(23, 162, 184, 0)
  );
}

.leftSideBarIcon {
  padding: 0% 2%;
  width: 12%;
  color: var(--secondary-alt-color);
  /* width: 20%; */
  float: left;
}

.leftSideBarText {
  padding: 0% 1%;
  /* padding-left: 10%; */
  /* width: 80%; */
  float: left;
}

.thumbsEntityArea {
  overflow-y: auto;
}

.EntryEditorRender {
  grid-area: render;
  align-self: stretch;
  justify-self: stretch;
}

.EntryEditorMetadata {
  overflow: hidden;
}

.renderParams-a {
  grid-area: renderParams;
  justify-self: start;
  align-self: center;
  padding-left: 8px;
}

.nameValue-a {
  grid-area: nameValue;
  justify-self: start;
  align-self: center;
  padding-left: 8px;
  font-size: 1rem;
}

.entity-drag-a {
  grid-area: drag;
  justify-self: stretch;
  align-self: stretch;
}

.entity-tags-a {
  grid-area: entity-tags;
  justify-self: center;
  align-self: start;
  margin-top: 10px;
}

.entity-info-a {
  grid-area: entity-info;
  justify-self: stretch;
  align-self: start;
}

.nodeViewer-a {
  grid-area: nodeViewer;
  justify-self: stretch;
  align-self: start;
  padding: 5px;
  margin: 0px 7px;
  height: 100%;
  /* border: 1px solid #d1d1d140; */
  border-radius: 4px;
  overflow-y: auto;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
}

.titleMargin {
  margin: 0px 2px;
}

.matName-a {
  grid-area: matName;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-one);
  color: var(--primary-color-light);
}

.replaceMat-a {
  grid-area: replaceMat;
  justify-self: end;
  align-self: center;
  cursor: pointer;
  color: var(--secondary-alt-color);
}

.replaceMat-a:hover {
  opacity: 0.8;
  transition: opacity 0.2s ease-in;
}

.replaceMat-a:active {
  transform: scale(0.95);
  transition-duration: 0.2s;
}

.baseColorLabel-a {
  grid-area: baseColorLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
}

.baseColorPicker-a {
  grid-area: baseColorPicker;
  justify-self: end;
  align-self: center;
  cursor: pointer;
}

.baseTexture-a {
  /* grid-area: baseTexture; */
  justify-self: stretch;
  align-self: stretch;
}

.baseTextureLabel-a {
  /* grid-area: baseTextureLabel; */
  justify-self: center;
  align-self: center;
  font-size: var(--font-size-extrasmall);
}

.metallicLabel-a {
  grid-area: metallicLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
}

.metallicSlider-a {
  grid-area: metallicSlider;
  justify-self: center;
  align-self: center;
}

.roughnessLabel-a {
  grid-area: roughnessLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
}

.roughnessSlider-a {
  grid-area: roughnessSlider;
  justify-self: center;
  align-self: center;
}

.aoLabel-a {
  grid-area: aoLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
}

.aoSlider-a {
  grid-area: aoSlider;
  justify-self: center;
  align-self: center;
}

.opacityLabel-a {
  grid-area: opacityLabel;
  justify-self: start;
  align-self: center;
  font-size: var(--font-size-small);
}

.opacitySlider-a {
  grid-area: opacitySlider;
  justify-self: center;
  align-self: center;
}

.normalTexture-a {
  grid-area: normalTexture;
}

.normalTextureLabel-a {
  grid-area: normalTextureLabel;
}

.metallicTexture-a {
  grid-area: metallicTexture;
}

.metallicTextureLabel-a {
  grid-area: metallicTextureLabel;
}

.roughnessTexture-a {
  grid-area: roughnessTexture;
}

.roughnessTextureLabel-a {
  grid-area: roughnessTextureLabel;
}

.aoTexture-a {
  grid-area: aoTexture;
}

.aoTextureLabel-a {
  grid-area: aoTextureLabel;
}

.emissiveTexture-a {
  grid-area: emissiveTexture;
}

.emissiveTextureLabel-a {
  grid-area: emissiveTextureLabel;
}

.pbrSlider {
  width: 100%;
}

.smallObjectMaterial {
  display: grid;
  margin: 10px 0px;
  padding: 4px 8px;
  padding-top: 2px;
  grid-template-columns: repeat(6, 15.5%);
  grid-template-rows: 32px 22px repeat(4, 16px) 32px 8px;
  grid-template-areas:
    "matName matName matName matName matName replaceMat"
    "baseColorLabel baseColorLabel baseColorLabel baseColorLabel baseColorLabel baseColorPicker"
    "metallicLabel metallicLabel metallicLabel metallicSlider metallicSlider metallicSlider"
    "roughnessLabel roughnessLabel roughnessLabel roughnessSlider roughnessSlider roughnessSlider"
    "aoLabel aoLabel aoLabel aoSlider aoSlider aoSlider"
    "opacityLabel opacityLabel opacityLabel opacitySlider opacitySlider opacitySlider"
    "baseTexture normalTexture metallicTexture roughnessTexture aoTexture emissiveTexture"
    "baseTextureLabel normalTextureLabel metallicTextureLabel roughnessTextureLabel aoTextureLabel emissiveTextureLabel";
  grid-gap: 4px 3px;
  align-items: center;
  justify-items: start;
  /* border: solid 1px rgba(23, 162, 184, 0.55); */
  background-image: linear-gradient(
    rgba(23, 162, 244, 0.25),
    rgba(23, 162, 184, 0)
  );
}

.materialParams {
  display: grid;
  margin: 0;
  margin-bottom: 5px;
  padding: 8px 8px;
  grid-template-columns: repeat(6, 15.5%);
  grid-template-rows: 22px repeat(4, 16px);
  grid-template-areas:
    "baseColorLabel baseColorLabel baseColorLabel baseColorLabel baseColorLabel baseColorPicker"
    "metallicLabel metallicLabel metallicLabel metallicSlider metallicSlider metallicSlider"
    "roughnessLabel roughnessLabel roughnessLabel roughnessSlider roughnessSlider roughnessSlider"
    "aoLabel aoLabel aoLabel aoSlider aoSlider aoSlider"
    "opacityLabel opacityLabel opacityLabel opacitySlider opacitySlider opacitySlider";
  grid-gap: 4px 3px;
  align-items: center;
  justify-items: start;
  border: solid 1px rgba(23, 162, 184, 0.55);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.15),
    rgba(23, 162, 184, 0)
  );
}

.smallObjectMaterial:hover {
  border: solid 1px rgba(23, 162, 184, 0.85);
  background-image: linear-gradient(
    rgba(23, 162, 184, 0.25),
    rgba(23, 162, 184, 0)
  );
}

.entity-info-c {
  border: 1px solid #d1d1d140;
  border-radius: 4px;
  cursor: text;
  margin: 10px 0px;
  padding: 5px 5px;
}

.deleteentity-a {
  grid-area: deleteentity;
  justify-self: end;
  align-self: center;
}

.metaInfiTitle {
  position: absolute;
}

.metaInfoValue {
  position: absolute;
  padding-left: 65px;
  margin-top: -0.03rem;
}

.metaInfoValueNoOff {
  position: absolute;
  padding-left: 65px;
  margin-top: 2px;
}

.GeomEditorRenderGrid {
  display: grid;
  /* margin: 10px; */
  grid-template-columns: 522px 253px 235px;
  grid-template-rows: 45px 373px 117px 45px;
  grid-template-areas:
    "renderParams nodeViewer drag"
    "render nodeViewer entity-tags"
    "render nodeViewer entity-info"
    "render nodeViewer deleteentity";
  grid-gap: 0px 5px;
  align-items: center;
  justify-items: start;
}

.AppEditorRenderGrid {
  display: grid;
  grid-template-columns: 510px 510px;
  grid-template-rows: 30px 262px 262px 30px;
  grid-template-areas:
    "source_tabs render"
    "source render"
    "source app_controls"
    "source_controls app_controls";
  grid-gap: 0;
  /* align-items: center;
  justify-items: start; */
}

.app_controls-a {
  grid-area: app_controls;
  align-self: start;
}

.source_tabs-a {
  grid-area: source_tabs;
  background: var(--dark-color);
  /* color: var(--primary-color); */
  width: 100%;
  height: 100%;
}

.source_controls-a {
  grid-area: source_controls;
  background: var(--dark-color);
  width: 100%;
  height: 100%;
}

.app_controls-a {
  grid-area: app_controls;
}

.console-output {
  /* grid-area: app_controls; */
  padding: 5px 10px;
  width: 100%;
  height: 252px;
  align-self: stretch;
  justify-self: stretch;
  overflow: auto;
  display: flex;
  flex-direction: column-reverse;
}

.console-output-text {
  height: 100px;
  overflow-x: hidden;
  overflow-y: auto;
  transform: rotate(180deg);
  direction: rtl;
  text-align: left;
}

.console-output-ul {
  overflow: hidden;
  transform: rotate(180deg);
}

.confirm-alert {
  position: absolute;
  margin: auto;
  padding-top: 250px;
  padding-left: 200px;
}

.bigimagequad {
  grid-area: render;
  width: 522px;
  height: 522px;
  object-fit: contain;
  margin: 7px;
  padding: 5px;
  border-radius: 10px;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
}

.appdataquad {
  grid-area: source;
  align-self: stretch;
  justify-self: stretch;
}

.CodeMirror {
  height: 524px;
}

.GUIEditorRenderGrid {
  display: grid;
  grid-template-columns: 510px 510px;
  grid-template-rows: 30px 554px;
  grid-template-areas:
    "ui_tabs render"
    "ui_source render";
  grid-gap: 0;
}

.ui_tabs-a {
  grid-area: ui_tabs;
  background: var(--dark-color);
  /* color: var(--primary-color); */
  width: 100%;
  height: 100%;
}

.ui_source-a {
  grid-area: ui_source;
  align-self: stretch;
  justify-self: stretch;
}

.materialRender {
  float: left;
  width: 400px;
  height: 340px;
}

.material-text {
  padding-bottom: 2px;
}

.mediumPBRquad {
  padding: 2px;
  margin-bottom: 5px;
  justify-self: stretch;
  align-self: stretch;
  border-radius: 2.5px;
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 2px 10px 0 rgba(0, 0, 0, 0.19);
  /* overflow: scroll; */
}

.materialPBRRaw {
  width: 680px;
  height: 172px;
  margin-bottom: 2px;
}

.materialPBRRaw2 {
  display: inline;
  width: 300px;
  height: 344px;
  float: left;
}

.mediumimagequad {
  object-fit: contain;
}

.geomThumbNotFound {
  font-size: 2.8rem;
}

.imageThumbNotFound {
  font-size: 3rem;
}

.leftPadded {
  padding-left: 4px;
}

.rightFloat {
  display: block;
  float: right;
}

.rightFloatPadded {
  display: block;
  float: right;
  padding-right: 4px;
}

/* Text Styles*/
.x-large {
  font-size: 4rem;
  margin-bottom: 1rem;
}

.large {
  font-size: 3rem;
  margin-bottom: 1rem;
}

.lead {
  font-size: 1.5rem;
  margin-bottom: 1rem;
}

.medium {
  font-size: 1.25rem;
}

.small {
  font-size: 0.7rem;
}

.extra-small {
  font-size: 0.55rem;
}

.normal {
  font-size: 0.8rem;
}

.text-center {
  text-align: center;
}

.text-primary {
  color: var(--primary-color-light);
}

.text-secondary-alt {
  color: var(--secondary-alt-color);
}

.text-dark {
  color: var(--dark-color);
}

.text-pale {
  color: #7f7f7f;
}

.text-danger {
  color: var(--danger-color);
}

/* Padding */
.p {
  padding: 0.5rem;
}
.p-1 {
  padding: 1rem;
}
.p-2 {
  padding: 2rem;
}
.p-3 {
  padding: 3rem;
}
.py {
  padding: 0.5rem 0;
}
.py-1 {
  padding: 1rem 0;
}
.py-2 {
  padding: 2rem 0;
}
.py-3 {
  padding: 3rem 0;
}

/* Margin */
.m {
  margin: 0.5rem;
}
.m-1 {
  margin: 1rem;
}
.m-2 {
  margin: 2rem;
}
.m-3 {
  margin: 3rem;
}
.my {
  margin: 0.5rem 0;
}
.my-1 {
  margin: 1rem 0;
}
.my-2 {
  margin: 2rem 0;
}
.my-3 {
  margin: 3rem 0;
}
.mx {
  margin: 0 0.5rem;
}
.mx-1 {
  margin: 0 1rem;
}
.mx-2 {
  margin: 0 2rem;
}
.mx-3 {
  margin: 0 3rem;
}

.rightFloater {
  float: right;
}

.inliner {
  display: inline;
}

.blocker {
  display: block;
}

.leftFloater {
  float: left;
}

.fullWidth {
  width: 100%;
  display: block;
}

/* .btn {
  display: inline-block;
  background: var(--light-color);
  color: #333;
  padding: 0.4rem 1.3rem;
  font-size: 1rem;
  border: none;
  cursor: pointer;
  margin-right: 0.5rem;
  transition: opacity 0.2s ease-in;
  outline: none;
  border-radius: 3px;
} */

.btn2 {
  width: 100%;
  background: var(--light-color);
  color: #333;
  padding: 0.4rem 1.3rem;
  font-size: 1rem;
  border: none;
  cursor: pointer;
  transition: opacity 0.2s ease-in;
  outline: none;
}

.btnConfirm {
  width: 50%;
  background: var(--light-color);
  color: #333;
  padding: 0.2rem 1.1rem;
  font-size: 1.2rem;
  border: none;
  cursor: pointer;
  transition: opacity 0.2s ease-in;
  outline: none;
}

.btn:active {
  transform: scale(0.95);
  transition-duration: 0.2s;
}

.btn2:active {
  transform: scale(0.95);
  transition-duration: 0.2s;
}

.btnConfirm:active {
  transform: scale(0.98);
  transition-duration: 0.2s;
}

.closeButton {
  display: block;
  width: 100%;
  float: right;
  padding: 6px 6px 4px 8px;
}

.badge {
  font-size: 0.8rem;
  padding: 0.1rem;
  text-align: center;
  margin: 0.3rem;
  background: var(--light-color);
  color: #333;
}

.alert {
  padding: 0.8rem;
  margin: 1rem 0;
  opacity: 0.9;
  background: var(--light-color);
  color: #333;
}

.fullline {
  float: left;
  margin-left: 10px;
  width: 100%;
  overflow: hidden;
}

.navdiv {
  display: table;
  width: 100%;
  overflow: hidden;
  padding: 4px 0px;
}

.navdiv-title {
  font-family: "Raleway", sans-serif;
  width: 35%;
  display: table-cell;
  vertical-align: middle;
}

.navdiv-titletext {
  color: var(--light-color);
}

.navdiv-projecttext {
  color: var(--secondary-alt-color);
}

.user-navbar {
  width: 35%;
  display: table-cell;
  vertical-align: middle;
  text-align: right;
}

/* .btn-primary,
.bg-primary,
.badge-primary,
.alert-primary {
  background: var(--primary-color);
  color: #fff;
} */

.btn-light,
.bg-light,
.badge-light,
.alert-light {
  background: var(--light-color);
  color: #333;
}

.btn-dark,
.bg-dark,
.badge-dark,
.alert-dark {
  background: var(--dark-color);
  color: #fff;
}

.btn-danger,
.bg-danger,
.badge-danger,
.alert-danger {
  background: var(--danger-color);
  color: #fff;
}

.btn-success,
.bg-success,
.badge-success,
.alert-success {
  background: var(--success-color);
  color: #fff;
}

.btn-white,
.bg-white,
.badge-white,
.alert-white {
  background: #fff;
  color: #333;
  border: #ccc solid 1px;
}

.btn:hover {
  opacity: 0.8;
}

.bg-light,
.badge-light {
  border: #ccc solid 1px;
}

.round-img {
  border-radius: 50%;
}

.line {
  height: 1px;
  background: #ccc;
  margin: 1.5rem 0;
}

/* Overlay */
.dark-overlay {
  background-color: rgba(0, 0, 0, 0.7);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

/* Forms */
.form .form-group {
  margin: 1.2rem 0;
}

.form .form-text {
  display: block;
  margin-top: 0.3rem;
  color: #888;
}

.form input[type="text"],
.form input[type="email"],
.form input[type="password"],
.form input[type="date"],
.form select,
.form textarea {
  display: block;
  width: 90%;
  max-width: 600px;
  padding: 0.4rem;
  font-size: 1.2rem;
  border: 1px solid #ccc;
}

.form input[type="submit"],
button {
  font: inherit;
}

.form .social-input {
  display: flex;
}

.form .social-input i {
  padding: 0.5rem;
  width: 4rem;
}

.form .social-input i.fa-twitter {
  color: #38a1f3;
}
.form .social-input i.fa-facebook {
  color: #3b5998;
}
.form .social-input i.fa-instagram {
  color: #3f729b;
}
.form .social-input i.fa-youtube {
  color: #c4302b;
}
.form .social-input i.fa-linkedin {
  color: #0077b5;
}

input[type="color"] {
  -webkit-appearance: none;
  width: 20px;
  height: 20px;
  border: solid 1px #000; /*change color of the swatch border here*/
  border-radius: 2px;
  background: none;
}
input[type="color"]::-webkit-color-swatch-wrapper {
  padding: 0;
}
input[type="color"]::-webkit-color-swatch {
  border: solid 1px #000; /*change color of the swatch border here*/
  border-radius: 2px;
}

input[type="color"]:hover {
  border: solid 2px var(--primary-color); /*change color of the swatch border here*/
}

input[type="color"]:active {
  transform: scale(0.95);
}

/* Navbar */
.navbar {
  /* display: block; */
  justify-content: space-between;
  align-items: center;
  background-color: #222;
}

.navbar ul {
  display: flex;
}

.navbar a {
  color: #fff;
  padding: 0.45rem;
  margin: 0 0.25rem;
}

.navbar a:hover {
  color: var(--primary-color);
}

.navbar .welcome span {
  margin-right: 0.6rem;
}

/* Landing Page */
.landing {
  position: relative;
  background: url("./img/bg.jpg") no-repeat center center/cover;
  height: 100vh;
}

.landing-inner {
  color: #fff;
  height: 100%;
  width: 80%;
  margin: auto;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
}

.projectManagementContainer {
  width: 50%;
  margin-top: 20px;
  padding: 10px;
  border: 1px solid grey;
  border-radius: 5px;
}

/* Tooltip container */
.tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */
}

/* Tooltip text */
.tooltip .tooltiptext {
  visibility: hidden;
  width: 120px;
  bottom: 100%;
  left: 50%;
  margin-left: -60px; /* Use half of the width (120/2 = 60), to center the tooltip */
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;

  /* Position the tooltip text - see examples below! */
  position: absolute;
  z-index: 1;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
  visibility: visible;
}

.userWithNoProject {
  margin: 2% 1.5%;
}

.dropzone {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 7px;
  border-width: 2px;
  border-radius: 2px;
  border-color: #eeeeee;
  border-style: dashed;
  background-color: #fafafa;
  margin-bottom: 7px;
  color: #bdbdbd;
  outline: none;
  transition: border 0.24s ease-in-out;
  cursor: pointer;
}

.dropzoneNoHMargins {
  /* margin: 5px 0px; */
  cursor: pointer;
}

.react-tags {
  position: relative;
  padding: 6px 0 0 6px;
  border: 1px solid #d1d1d140;
  border-radius: 4px;
  margin-top: 10px;

  /* shared font styles */
  color: var(--primary-color);
  font-size: 1em;
  line-height: 1.2;

  /* clicking anywhere will focus the input */
  cursor: text;
}

.react-tags.is-focused {
  border-color: #b1b1b140;
}

.react-tags__selected {
  display: inline;
}

.react-tags__selected-tag {
  display: inline-block;
  box-sizing: border-box;
  margin: 0 6px 6px 0;
  padding: 6px 8px;
  border: 1px solid #d1d1d1;
  border-radius: 2px;
  background: #f1f1f1;
  color: var(--primary-color);

  /* match the font styles */
  font-size: inherit;
  line-height: inherit;
}

.react-tags__selected-tag:after {
  content: "\2715";
  color: #aaa;
  margin-left: 8px;
}

.react-tags__selected-tag:hover,
.react-tags__selected-tag:focus {
  border-color: #b1b1b1;
}

.react-tags__search {
  display: inline-block;

  /* match tag layout */
  padding: 7px 2px;
  margin-bottom: 6px;

  /* prevent autoresize overflowing the container */
  max-width: 100%;
}

@media screen and (min-width: 30em) {
  .react-tags__search {
    /* this will become the offsetParent for suggestions */
    position: relative;
  }
}

.react-tags__search input {
  /* prevent autoresize overflowing the container */
  max-width: 100%;
  min-width: 200px;
  /* remove styles and layout from this element */
  margin: 0;
  padding: 0;
  border: 0;
  outline: none;

  /* match the font styles */
  font-size: inherit;
  line-height: inherit;
}

.react-tags__search input::-ms-clear {
  display: none;
}

.react-tags__suggestions {
  position: absolute;
  top: 100%;
  left: 0;
  width: 100%;
}

@media screen and (min-width: 30em) {
  .react-tags__suggestions {
    width: 240px;
  }
}

.react-tags__suggestions ul {
  margin: 4px -1px;
  padding: 0;
  list-style: none;
  background: white;
  border: 1px solid #d1d1d1;
  border-radius: 2px;
  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.react-tags__suggestions li {
  border-bottom: 1px solid #ddd;
  padding: 6px 8px;
}

.react-tags__suggestions li mark {
  text-decoration: underline;
  background: none;
  font-weight: 600;
}

.react-tags__suggestions li:hover {
  cursor: pointer;
  background: #eee;
}

.react-tags__suggestions li.is-active {
  background: #b7cfe0;
}

.react-tags__suggestions li.is-disabled {
  opacity: 0.5;
  cursor: auto;
}
